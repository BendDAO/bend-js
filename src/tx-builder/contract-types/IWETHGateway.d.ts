/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IWETHGatewayInterface extends ethers.utils.Interface {
  functions: {
    "auctionETH(address,uint256,address)": FunctionFragment;
    "borrowETH(uint256,address,uint256,address,uint16)": FunctionFragment;
    "depositETH(address,uint16)": FunctionFragment;
    "liquidateETH(address,uint256)": FunctionFragment;
    "redeemETH(address,uint256)": FunctionFragment;
    "repayETH(address,uint256,uint256)": FunctionFragment;
    "withdrawETH(uint256,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "auctionETH",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowETH",
    values: [BigNumberish, string, BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositETH",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "liquidateETH",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemETH",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "repayETH",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawETH",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(functionFragment: "auctionETH", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "borrowETH", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "depositETH", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "liquidateETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "redeemETH", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "repayETH", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawETH",
    data: BytesLike
  ): Result;

  events: {};
}

export class IWETHGateway extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IWETHGatewayInterface;

  functions: {
    auctionETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "auctionETH(address,uint256,address)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    borrowETH(
      amount: BigNumberish,
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "borrowETH(uint256,address,uint256,address,uint16)"(
      amount: BigNumberish,
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    depositETH(
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "depositETH(address,uint16)"(
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    liquidateETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "liquidateETH(address,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    redeemETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "redeemETH(address,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    repayETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "repayETH(address,uint256,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    withdrawETH(
      amount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdrawETH(uint256,address)"(
      amount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  auctionETH(
    nftAsset: string,
    nftTokenId: BigNumberish,
    onBehalfOf: string,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "auctionETH(address,uint256,address)"(
    nftAsset: string,
    nftTokenId: BigNumberish,
    onBehalfOf: string,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  borrowETH(
    amount: BigNumberish,
    nftAsset: string,
    nftTokenId: BigNumberish,
    onBehalfOf: string,
    referralCode: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "borrowETH(uint256,address,uint256,address,uint16)"(
    amount: BigNumberish,
    nftAsset: string,
    nftTokenId: BigNumberish,
    onBehalfOf: string,
    referralCode: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  depositETH(
    onBehalfOf: string,
    referralCode: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "depositETH(address,uint16)"(
    onBehalfOf: string,
    referralCode: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  liquidateETH(
    nftAsset: string,
    nftTokenId: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "liquidateETH(address,uint256)"(
    nftAsset: string,
    nftTokenId: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  redeemETH(
    nftAsset: string,
    nftTokenId: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "redeemETH(address,uint256)"(
    nftAsset: string,
    nftTokenId: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  repayETH(
    nftAsset: string,
    nftTokenId: BigNumberish,
    amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "repayETH(address,uint256,uint256)"(
    nftAsset: string,
    nftTokenId: BigNumberish,
    amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  withdrawETH(
    amount: BigNumberish,
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdrawETH(uint256,address)"(
    amount: BigNumberish,
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    auctionETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "auctionETH(address,uint256,address)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      overrides?: CallOverrides
    ): Promise<void>;

    borrowETH(
      amount: BigNumberish,
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "borrowETH(uint256,address,uint256,address,uint16)"(
      amount: BigNumberish,
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositETH(
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "depositETH(address,uint16)"(
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    liquidateETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "liquidateETH(address,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "redeemETH(address,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    repayETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: boolean;
    }>;

    "repayETH(address,uint256,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: boolean;
    }>;

    withdrawETH(
      amount: BigNumberish,
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawETH(uint256,address)"(
      amount: BigNumberish,
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    auctionETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "auctionETH(address,uint256,address)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    borrowETH(
      amount: BigNumberish,
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "borrowETH(uint256,address,uint256,address,uint16)"(
      amount: BigNumberish,
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    depositETH(
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "depositETH(address,uint16)"(
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    liquidateETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "liquidateETH(address,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    redeemETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "redeemETH(address,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    repayETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "repayETH(address,uint256,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    withdrawETH(
      amount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdrawETH(uint256,address)"(
      amount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    auctionETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "auctionETH(address,uint256,address)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    borrowETH(
      amount: BigNumberish,
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "borrowETH(uint256,address,uint256,address,uint16)"(
      amount: BigNumberish,
      nftAsset: string,
      nftTokenId: BigNumberish,
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    depositETH(
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "depositETH(address,uint16)"(
      onBehalfOf: string,
      referralCode: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    liquidateETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "liquidateETH(address,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    redeemETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "redeemETH(address,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    repayETH(
      nftAsset: string,
      nftTokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "repayETH(address,uint256,uint256)"(
      nftAsset: string,
      nftTokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    withdrawETH(
      amount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdrawETH(uint256,address)"(
      amount: BigNumberish,
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
